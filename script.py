# –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
usage_examples = """
# –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï ENHANCED RAG ARTICLE GENERATOR –° PERSISTENT STORAGE

## 1. –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –≤ –ø–∞–º—è—Ç–∏)
./target/release/enhanced-rag-generator "Rust machine learning frameworks"

## 2. –° –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
./target/release/enhanced-rag-generator \\
  --database ./rag_cache.db \\
  "Rust machine learning frameworks"

## 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–µ—à–∞
./target/release/enhanced-rag-generator \\
  --database ./rag_cache.db \\
  --cache-days 14 \\
  --similarity-threshold 0.8 \\
  --max-docs 20 \\
  "Advanced Rust web frameworks comparison"

## 4. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–µ—à–∞
./target/release/enhanced-rag-generator \\
  --database ./rag_cache.db \\
  --show-cache-stats \\
  "dummy query"

## 5. –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π
./target/release/enhanced-rag-generator \\
  --database ./rag_cache.db \\
  --cleanup-cache \\
  "dummy query"

## 6. –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –æ–ø—Ü–∏–π
./target/release/enhanced-rag-generator \\
  --searx-host "http://localhost:8080" \\
  --ollama-host "http://localhost:11434" \\
  --model "llama3.1:70b" \\
  --embedding-model "nomic-embed-text:latest" \\
  --database ./my_rag_cache.db \\
  --cache-days 7 \\
  --similarity-threshold 0.7 \\
  --max-docs 15 \\
  --output "my_article.md" \\
  "Comprehensive guide to Rust async programming"
"""

print("üìã –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ù–û–í–û–ì–û –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê")
print("=" * 70)
print(usage_examples)

print("\nüîß –ö–õ–Æ–ß–ï–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
print("=" * 70)

features = [
    ("üéØ –î–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã", "–í –ø–∞–º—è—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (LMDB)"),
    ("üíæ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–≤–µ–∂–µ—Å—Ç–∏"),
    ("üîç –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤", "–ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–∞–Ω–µ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"),
    ("‚ö° –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"),
    ("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞", "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –∫–µ—à–∞"),
    ("üßπ –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞", "–£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É"),
    ("üéõÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", "–ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–æ–∫–æ–≤ –∫–µ—à–∞ –∏ –ø–æ—Ä–æ–≥–æ–≤ —Å—Ö–æ–¥—Å—Ç–≤–∞"),
    ("üîÑ –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", "–ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º API")
]

for title, description in features:
    print(f"{title:<35} {description}")

print(f"\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê PERSISTENT STORAGE:")
print("=" * 70)

benefits = [
    "‚úÖ –£—Å–∫–æ—Ä–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ 5-10 —Ä–∞–∑",
    "‚úÖ –°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ SearXNG –∏ Ollama",
    "‚úÖ –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∑–Ω–∞–Ω–∏–π –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏",
    "‚úÖ –≠–∫–æ–Ω–æ–º–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç—Ä–∞—Ñ–∏–∫–∞",
    "‚úÖ –£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Å—Ç–∞—Ç–µ–π –∑–∞ —Å—á–µ—Ç –±–æ–ª—å—à–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
    "‚úÖ –û—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å - —Ä–∞–±–æ—Ç–∞ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
]

for benefit in benefits:
    print(f"  {benefit}")

print(f"\nüóÑÔ∏è –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø:")
print("=" * 70)

technical_details = [
    ("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", "LMDB (Lightning Memory-Mapped Database)"),
    ("–í–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫", "arroy (Rust-native HNSW implementation)"),
    ("–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ: –¥–æ–∫—É–º–µ–Ω—Ç—ã + –∑–∞–ø—Ä–æ—Å—ã + –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ"),
    ("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–µ–∂–µ—Å—Ç–∏", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
    ("–°—Ö–æ–¥—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤", "–ö–æ—Å–∏–Ω—É—Å–Ω–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ + –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å–ª–æ–≤"),
    ("–†–∞–∑–º–µ—Ä –ë–î", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º—ã–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2GB)"),
    ("ACID", "–ü–æ–ª–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–∞—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö"),
    ("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "Memory-mapped –¥–æ—Å—Ç—É–ø, zero-copy –æ–ø–µ—Ä–∞—Ü–∏–∏")
]

for tech, desc in technical_details:
    print(f"  {tech:<20} {desc}")

print(f"\nüéÆ WORKFLOW –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:")
print("=" * 70)

workflow_steps = [
    "1Ô∏è‚É£  –ó–∞–ø—É—Å–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º --database —Å–æ–∑–¥–∞–µ—Ç/–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç LMDB",
    "2Ô∏è‚É£  –ü—Ä–∏ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –∏—â—É—Ç—Å—è –ø–æ—Ö–æ–∂–∏–µ –≤ –∫–µ—à–µ",
    "3Ô∏è‚É£  –ò–∑–≤–ª–µ–∫–∞—é—Ç—Å—è —Å–≤–µ–∂–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã",
    "4Ô∏è‚É£  –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å –≤–µ–±–∞",
    "5Ô∏è‚É£  –ù–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–µ—à–∏—Ä—É—é—Ç—Å—è",
    "6Ô∏è‚É£  –ó–∞–ø—Ä–æ—Å –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –¥–ª—è –±—É–¥—É—â–∏—Ö –ø–æ–∏—Å–∫–æ–≤",
    "7Ô∏è‚É£  –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å—Ç–∞—Ç—å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö",
    "8Ô∏è‚É£  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è"
]

for step in workflow_steps:
    print(f"  {step}")

print(f"\nüìà –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
print("=" * 70)
print("  ‚Ä¢ –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å")
print("  ‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å: —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ 5-10 —Ä–∞–∑") 
print("  ‚Ä¢ –ü–æ—Ö–æ–∂–∏–π –∑–∞–ø—Ä–æ—Å: —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ 2-3 —Ä–∞–∑–∞")
print("  ‚Ä¢ –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º")
print("  ‚Ä¢ –£–º–µ–Ω—å—à–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")